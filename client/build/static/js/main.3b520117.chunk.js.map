{"version":3,"sources":["pages/Landing.js","Redux/actions/alert.js","Redux/actions/types.js","Helpers/setAuthToken.js","Redux/actions/auth.js","components/Common/Copyright.js","Helpers/formStyles.js","pages/Register.js","pages/Login.js","Redux/actions/board.js","Helpers/modalStyles.js","components/Common/CreateBoard.js","components/Common/Navbar.js","pages/Dashboard.js","components/TrelloBoard/BoardTitle.js","components/StatusList/ListTitle.js","Helpers/getInitials.js","components/TaskCard/MoveCard.js","components/TaskCard/DeleteCard.js","components/TaskCard/CardModal.js","components/TaskCard/Card.js","components/StatusList/CreateCardForm.js","components/StatusList/List.js","components/TrelloBoard/CreateList.js","pages/Board.js","components/Common/Alert.js","pages/UpdateProfile.js","Redux/actions/profile.js","Redux/reducers/alert.js","Redux/reducers/auth.js","Redux/reducers/board.js","Redux/reducers/profile.js","Redux/reducers/index.js","Redux/store.js","App.js","index.js"],"names":["Landing","useSelector","state","auth","isAuthenticated","to","className","Button","variant","setAlert","msg","alertType","timeout","dispatch","id","uuidv4","type","payload","setTimeout","setAuthToken","token","axios","defaults","headers","common","loadUser","a","localStorage","get","res","data","register","name","email","password","config","body","JSON","stringify","post","errors","response","forEach","error","login","Copyright","Date","getFullYear","useStyles","makeStyles","theme","container","display","flexDirection","alignItems","height","maxWidth","padding","background","paper","marginTop","spacing","form","width","submit","margin","Register","classes","useState","password2","formData","setFormData","useDispatch","onChange","e","target","value","onSubmit","preventDefault","Container","component","CssBaseline","Typography","Grid","item","xs","TextField","autoComplete","required","fullWidth","label","autoFocus","color","justify","Box","mt","Login","addBoard","history","push","_id","statusText","status","addList","addCard","editCard","cardId","patch","moveCard","deleteCard","listId","delete","createBoardModal","cardModal","breakpoints","down","cardTitle","button","membersTitle","labelTitle","colorPicker","minWidth","noLabel","moveCardTitle","moveCardSelect","marginRight","header","marginBottom","checklistItem","justifyContent","checklistFormLabel","itemButtons","itemButton","checklistBottom","position","left","transform","up","top","maxHeight","palette","shadows","modalTop","modalSection","flexWrap","modalBottomRight","archiveButton","withRouter","open","setOpen","title","setTitle","onClick","Modal","onClose","Navbar","Dashboard","user","boards","board","loading","dashboardLoading","useEffect","CircularProgress","map","key","BoardTitle","editing","setEditing","size","ListTitle","list","getInitials","initials","match","shift","pop","toUpperCase","MoveCard","thisList","listObject","setListObject","listTitle","setListTitle","setPosition","positions","setPositions","lists","listObjects","sort","b","findIndex","filter","archived","cardObjects","cardPositions","cards","index","card","find","object","concat","length","fromId","toId","toIndex","FormControl","InputLabel","shrink","Select","displayEmpty","MenuItem","DeleteCard","openDialog","setOpenDialog","handleClose","onDeleteCard","Dialog","DialogTitle","DialogActions","CardModal","description","setDescription","onTitleDescriptionSubmit","multiline","onKeyPress","disabled","Card","openModal","setOpenModal","mouseOver","setMouseOver","setHeight","completeItems","setCompleteItems","cardRef","useRef","checklist","reduce","completed","complete","current","clientHeight","onSubmitEdit","CardContent","draggableId","provided","onMouseOver","onMouseLeave","ref","innerRef","draggableProps","dragHandleProps","style","bottom","zIndex","fontSize","backgroundColor","members","member","Tooltip","Avatar","CreateCardForm","setAdding","formRef","scrollIntoView","List","addingCard","setAddingCard","createCardFormRef","droppableId","droppableProps","placeholder","CreateList","adding","Board","params","onDragEnd","result","source","destination","direction","Alert","alerts","alert","severity","root","marginLeft","flex","fieldName","textField","connect","authLoading","profile","profileLoading","getProfile","userId","updateProfile","profileData","put","initialState","imgURL","handleChange","Array","isArray","skills","join","ListItem","ListItemText","primary","getItem","combineReducers","action","setItem","removeItem","from","includes","middleWare","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","UpdateProfile","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b520117.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport {Link} from \"react-router-dom\"\r\nimport './Landing.css'\r\n\r\nconst Landing = () => {\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <section className='landing'>\r\n      <nav className='top'>\r\n        <h2>FPRT</h2>\r\n        <div>\r\n        <Button variant='outlined' >\r\n\r\n<Link to='/login'>Login</Link>\r\n\r\n\r\n</Button>\r\n          <Button variant='outlined' >\r\n\r\n<Link to='/register'>Register</Link>\r\n\r\n\r\n</Button>\r\n        </div>\r\n      </nav>\r\n      <div className='landing-inner'>\r\n        \r\n        <div className='buttons'>\r\n          \r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Landing;\r\n","import { v4 as uuidv4 } from 'uuid';\r\nimport { SET_ALERT, REMOVE_ALERT } from './types';\r\n\r\nexport const setAlert = (msg, alertType, timeout = 5000) => (dispatch) => {\r\n  const id = uuidv4();\r\n  dispatch({\r\n    type: SET_ALERT,\r\n    payload: { msg, alertType, id },\r\n  });\r\n  setTimeout(() => dispatch({ type: REMOVE_ALERT, payload: id }), timeout);\r\n};\r\n","export const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n\r\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\r\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\r\n\r\nexport const USER_LOADED = 'USER_LOADED';\r\nexport const AUTH_ERROR = 'AUTH_ERROR';\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const CLEAR_BOARD = 'CLEAR_BOARD';\r\n\r\nexport const GET_BOARDS = 'GET_BOARDS';\r\nexport const GET_BOARD = 'GET_BOARD';\r\nexport const ADD_BOARD = 'ADD_BOARD';\r\nexport const BOARD_ERROR = 'BOARD_ERROR';\r\n\r\nexport const GET_LIST = 'GET_LIST';\r\nexport const ADD_LIST = 'ADD_LIST';\r\n\r\nexport const GET_CARD = 'GET_CARD';\r\nexport const ADD_CARD = 'ADD_CARD';\r\nexport const EDIT_CARD = 'EDIT_CARD';\r\nexport const MOVE_CARD = 'MOVE_CARD';\r\nexport const DELETE_CARD = 'DELETE_CARD';\r\n\r\n\r\nexport const GET_PROFILE = \"GET_PROFILE\";\r\nexport const UPDATE_PROFILE = \"UPDATE_PROFILE\";\r\nexport const CLEAR_PROFILE = \"CLEAR_PROFILE\";\r\nexport const UPDATE_PROFILE_ERROR = \"UPDATE_PROFILE_ERROR\";\r\nexport const PROFILE_ERROR = \"PROFILE_ERROR\";\r\n","import axios from 'axios';\r\n\r\nconst setAuthToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common['x-auth-token'] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common['x-auth-token'];\r\n  }\r\n};\r\n\r\nexport default setAuthToken;\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from './types';\r\nimport setAuthToken from '../../Helpers/setAuthToken';\r\n\r\n// Load User\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.token) {\r\n    setAuthToken(localStorage.token);\r\n  }\r\n\r\n  try {\r\n    const res = await axios.get('/api/auth');\r\n\r\n    dispatch({\r\n      type: USER_LOADED,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: AUTH_ERROR,\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\n// Register User\r\nexport const register = ({ name, email, password }) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ name, email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/users', body, config);\r\n\r\n    dispatch({\r\n      type: REGISTER_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error')));\r\n    }\r\n\r\n    dispatch({\r\n      type: REGISTER_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Login User\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const res = await axios.post('/api/auth', body, config);\r\n\r\n    dispatch({\r\n      type: LOGIN_SUCCESS,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(loadUser());\r\n  } catch (err) {\r\n    const errors = err.response.data.errors;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'error')));\r\n    }\r\n\r\n    dispatch({\r\n      type: LOGIN_FAIL,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout\r\nexport const logout = () => async (dispatch) => {\r\n  dispatch({ type: LOGOUT });\r\n};\r\n","import React from 'react';\r\n\r\nconst Copyright = () => {\r\n  return <p className='copyright'>FPRT @ {new Date().getFullYear()}.</p>;\r\n};\r\n\r\nexport default Copyright;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    height: '100vh',\r\n    maxWidth: '100vw',\r\n    padding: '20px',\r\n    background: 'linear-gradient(135deg, skyblue, violet)',\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px',\r\n    background: 'white',\r\n    maxWidth: '500px',\r\n  },\r\n  form: {\r\n    width: '100%', \r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","\r\n\r\nimport React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setAlert } from '../Redux/actions/alert';\r\nimport { register } from '../Redux/actions/auth';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport Copyright from '../components/Common/Copyright';\r\nimport useStyles from '../Helpers/formStyles';\r\n\r\nconst Register = () => {\r\n  const classes = useStyles();\r\n\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    password2: '',\r\n  });\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const dispatch = useDispatch();\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password !== password2) {\r\n      dispatch(setAlert('Passwords do not match', 'error'));\r\n    } else {\r\n      dispatch(register({ name, email, password }));\r\n    }\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs' className={classes.container}>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        \r\n        <Typography component='h1' variant='h5'>\r\n          Sign up\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={(e) => onSubmit(e)}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                autoComplete='name'\r\n                name='name'\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                label='Your Name'\r\n                autoFocus\r\n                value={name}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                label='Email Address'\r\n                name='email'\r\n                autoComplete='email'\r\n                value={email}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                name='password'\r\n                label='Password'\r\n                type='password'\r\n                value={password}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant='outlined'\r\n                required\r\n                fullWidth\r\n                name='password2'\r\n                label='Confirm Password'\r\n                type='password'\r\n                value={password2}\r\n                onChange={(e) => onChange(e)}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button\r\n            type='submit'\r\n            fullWidth\r\n            variant='contained'\r\n            color='primary'\r\n            className={classes.submit}\r\n          >\r\n            Sign Up\r\n          </Button>\r\n          <Grid container justify='flex-end'>\r\n            <Grid item>\r\n            \r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","\r\nimport React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { login } from '../Redux/actions/auth';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport Copyright from '../components/Common/Copyright';\r\nimport useStyles from '../Helpers/formStyles';\r\n\r\nconst Login = () => {\r\n  const classes = useStyles();\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const dispatch = useDispatch();\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to='/dashboard' />;\r\n  }\r\n\r\n  return (\r\n    <Container component='main' maxWidth='xs' className={classes.container}>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n       \r\n        <Typography component='h1' variant='h5'>\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={(e) => onSubmit(e)}>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            label='Email Address'\r\n            name='email'\r\n            autoComplete='email'\r\n            autoFocus\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            required\r\n            fullWidth\r\n            name='password'\r\n            label='Password'\r\n            type='password'\r\n            autoComplete='current-password'\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <Button\r\n            type='submit'\r\n            fullWidth\r\n            variant='contained'\r\n            color='primary'\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container justify='flex-end'>\r\n            \r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  \r\n  GET_BOARDS,\r\n  GET_BOARD,\r\n  ADD_BOARD,\r\n  BOARD_ERROR,\r\n  GET_LIST,\r\n  ADD_LIST,\r\n  GET_CARD,\r\n  ADD_CARD,\r\n  EDIT_CARD,\r\n  MOVE_CARD,\r\n  DELETE_CARD\r\n\r\n} from './types';\r\n\r\nconst config = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\n// Get boards\r\nexport const getBoards = () => async (dispatch) => {\r\n  try {\r\n    dispatch()\r\n\r\n    const res = await axios.get('/api/boards');\r\n\r\n    dispatch({\r\n      type: GET_BOARDS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR\r\n      \r\n    });\r\n  }\r\n};\r\n\r\n// Get board\r\nexport const getBoard = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/boards/${id}`);\r\n\r\n    if (res) {\r\n      axios.defaults.headers.common['boardId'] = id;\r\n    } else {\r\n      delete axios.defaults.headers.common['boardId'];\r\n    }\r\n\r\n    dispatch({\r\n      type: GET_BOARD,\r\n      payload: { ...res.data, listObjects: [], cardObjects: [] },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add board\r\nexport const addBoard = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.post('/api/boards', body, config);\r\n\r\n    dispatch({\r\n      type: ADD_BOARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Board Created', 'success'));\r\n\r\n    history.push(`/board/${res.data._id}`);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\n// Get list\r\nexport const getList = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/lists/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_LIST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add list\r\nexport const addList = (formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.post('/api/lists', body, config);\r\n\r\n    dispatch({\r\n      type: ADD_LIST,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch();\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      \r\n    });\r\n  }\r\n};\r\n\r\n\r\n// Get card\r\nexport const getCard = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/cards/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_CARD,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add card\r\nexport const addCard = (formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.post('/api/cards', body, config);\r\n\r\n    dispatch({\r\n      type: ADD_CARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch();\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR\r\n      \r\n    });\r\n  }\r\n};\r\n\r\n// Edit card\r\nexport const editCard = (cardId, formData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/cards/edit/${cardId}`, formData, config);\r\n\r\n    dispatch({\r\n      type: EDIT_CARD,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Move card\r\nexport const moveCard = (cardId, formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.patch(`/api/cards/move/${cardId}`, body, config);\r\n\r\n    dispatch({\r\n      type: MOVE_CARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch();\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR\r\n      \r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\n// Delete card\r\nexport const deleteCard = (listId, cardId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/cards/${listId}/${cardId}`);\r\n\r\n    dispatch({\r\n      type: DELETE_CARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch();\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      \r\n    });\r\n  }\r\n};\r\n\r\n\r\n\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  createBoardModal: {\r\n    width: 400,\r\n  },\r\n  cardModal: {\r\n    width: 800,\r\n    [theme.breakpoints.down('sm')]: {\r\n      maxWidth: 400,\r\n    },\r\n  },\r\n  cardTitle: {\r\n    width: '100%',\r\n  },\r\n  button: {\r\n    width: 180,\r\n    marginTop: 10,\r\n  },\r\n  membersTitle: {\r\n    margin: '20px 0 10px',\r\n  },\r\n  labelTitle: {\r\n    margin: '20px 0 10px',\r\n  },\r\n  colorPicker: {\r\n    minWidth: 212,\r\n  },\r\n  noLabel: {\r\n    width: 100,\r\n  },\r\n  moveCardTitle: {\r\n    marginTop: 20,\r\n  },\r\n  moveCard: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n  moveCardSelect: {\r\n    marginTop: 10,\r\n    marginRight: 20,\r\n    width: 200,\r\n  },\r\n  header: {\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  checklistItem: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    justifyContent: 'space-between',\r\n    margin: '2px 0 5px',\r\n  },\r\n  checklistFormLabel: {\r\n    width: '100%',\r\n  },\r\n  itemButtons: {\r\n    display: 'flex',\r\n    margin: 'auto',\r\n    [theme.breakpoints.down('sm')]: {\r\n      flexDirection: 'column',\r\n    },\r\n  },\r\n  itemButton: {\r\n    height: 40,\r\n  },\r\n  checklistBottom: {\r\n    marginTop: 5,\r\n  },\r\n  paper: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'absolute',\r\n    left: '50%',\r\n    transform: 'translateX(-50%)',\r\n    [theme.breakpoints.up('md')]: {\r\n      top: '5%',\r\n      maxHeight: '90vh',\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n      height: '100%',\r\n    },\r\n    overflowY: 'auto',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  modalTop: {\r\n    display: 'flex',\r\n  },\r\n  modalSection: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    flexWrap: 'wrap',\r\n    height: 'auto',\r\n  },\r\n  modalBottomRight: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'flex-end',\r\n    marginTop: 20,\r\n  },\r\n  archiveButton: {\r\n    marginBottom: 5,\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { addBoard } from '../../Redux/actions/board';\r\nimport { Modal, TextField, Button } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport useStyles from '../../Helpers/modalStyles';\r\n\r\nconst CreateBoard = ({ history }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(addBoard({ title }, history));\r\n  };\r\n\r\n  const body = (\r\n    <div className={`${classes.paper} ${classes.createBoardModal}`}>\r\n      <div className={classes.modalTop}>\r\n        <h1>Create new board</h1>\r\n        <Button onClick={() => setOpen(false)}>\r\n          <CloseIcon />\r\n        </Button>\r\n      </div>\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <TextField\r\n          variant='outlined'\r\n          margin='normal'\r\n          required\r\n          fullWidth\r\n          label='Add board title'\r\n          autoFocus\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <Button type='submit' fullWidth variant='contained' color='primary'>\r\n          Create New Treloo Board\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <button className='board-card create-board-card' onClick={() => setOpen(true)}>\r\n        Create Trello Board\r\n      </button>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(CreateBoard);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logout } from '../../Redux/actions/auth';\r\n\r\nconst Navbar = () => {\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const dispatch = useDispatch();\r\n\r\n  if (!isAuthenticated) {\r\n    return '';\r\n  }\r\n\r\n  return (\r\n    <nav className='navbar'>\r\n      <Link to='/dashboard'>Home</Link>\r\n      <Link to='/profile/edit'>Update Profile</Link>\r\n      <Link to='/' onClick={() => dispatch(logout())}>\r\n        Logout\r\n      </Link>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { getBoards } from '../Redux/actions/board';\r\nimport CreateBoard from '../components/Common/CreateBoard';\r\nimport Navbar from '../components/Common/Navbar';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport './Dashboard.css'\r\n\r\nconst Dashboard = () => {\r\n  const { user, isAuthenticated } = useSelector((state) => state.auth);\r\n  const boards = useSelector((state) => state.board.boards);\r\n  const loading = useSelector((state) => state.board.dashboardLoading);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getBoards());\r\n  }, [dispatch]);\r\n\r\n  if (!isAuthenticated) {\r\n    return <Redirect to='/' />;\r\n  }\r\n\r\n  return (\r\n    <div className='dashboard-and-navbar'>\r\n      <Navbar />\r\n      <section className='dashboard'>\r\n        <h1>Welcome {user && user.name}</h1>\r\n        <h2>Your Boards</h2>\r\n        {loading && <CircularProgress className='dashboard-loading' />}\r\n        <div className='boards'>\r\n          {boards.map((board) => (\r\n            <Link key={board._id} to={`/board/${board._id}`} className='board-card'>\r\n              {board.title}\r\n            </Link>\r\n          ))}\r\n          <CreateBoard />\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { TextField } from '@material-ui/core';\r\n\r\nconst BoardTitle = ({ board }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [title, setTitle] = useState(board.title);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setTitle(board.title);\r\n  }, [board.title]);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    setEditing(false);\r\n  };\r\n\r\n  return !editing ? (\r\n    <h2 className='board-title' onClick={() => setEditing(true)}>\r\n      {board.title}\r\n    </h2>\r\n  ) : (\r\n    <form className='board-title-form' onSubmit={(e) => onSubmit(e)}>\r\n      <TextField\r\n        variant='outlined'\r\n        required\r\n        value={title}\r\n        size='small'\r\n        onChange={(e) => setTitle(e.target.value)}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nBoardTitle.propTypes = {\r\n  board: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default BoardTitle;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { TextField } from '@material-ui/core';\r\n\r\nconst ListTitle = ({ list }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [title, setTitle] = useState(list.title);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setTitle(list.title);\r\n  }, [list.title]);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    setEditing(false);\r\n  };\r\n\r\n  return !editing ? (\r\n    <h3 className='list-title' onClick={() => setEditing(true)}>\r\n      {list.title}\r\n    </h3>\r\n  ) : (\r\n    <form onSubmit={(e) => onSubmit(e)}>\r\n      <TextField required value={title} onChange={(e) => setTitle(e.target.value)} />\r\n    </form>\r\n  );\r\n};\r\n\r\nListTitle.propTypes = {\r\n  list: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ListTitle;\r\n","const getInitials = (name) => {\r\n  let initials = name.match(/\\b\\w/g) || [];\r\n  return ((initials.shift() || '') + (initials.pop() || '')).toUpperCase();\r\n};\r\n\r\nexport default getInitials;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { moveCard } from '../../Redux/actions/board';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport useStyles from '../../Helpers/modalStyles';\r\n\r\nconst MoveCard = ({ cardId, setOpen, thisList }) => {\r\n  const classes = useStyles();\r\n  const [listObject, setListObject] = useState(null);\r\n  const [listTitle, setListTitle] = useState('');\r\n  const [position, setPosition] = useState(0);\r\n  const [positions, setPositions] = useState([0]);\r\n  const lists = useSelector((state) => state.board.board.lists);\r\n  const listObjects = useSelector((state) =>\r\n    state.board.board.listObjects\r\n      .sort(\r\n        (a, b) =>\r\n          lists.findIndex((id) => id === a._id) - lists.findIndex((id) => id === b._id)\r\n      )\r\n      .filter((list) => !list.archived)\r\n  );\r\n  const cardObjects = useSelector((state) => state.board.board.cardObjects);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setListObject(thisList);\r\n    setListTitle(thisList.title);\r\n  }, [thisList, cardId]);\r\n\r\n  useEffect(() => {\r\n    if (listObject) {\r\n      const unarchivedListCards = listObject.cards\r\n        .map((id, index) => {\r\n          const card = cardObjects.find((object) => object._id === id);\r\n          const position = index;\r\n          return { card, position };\r\n        })\r\n      \r\n      let cardPositions = unarchivedListCards.map((card) => card.position);\r\n      if (listObject !== thisList) {\r\n        cardPositions = cardPositions.concat(listObject.cards.length);\r\n      }\r\n      if (listObject.cards.length > 0) {\r\n        setPositions(cardPositions);\r\n        setPosition(thisList.cards.findIndex((id) => id === cardId));\r\n      } else {\r\n        setPositions([0]);\r\n        setPosition(0);\r\n      }\r\n    }\r\n  }, [thisList, cardId, listObject, cardObjects]);\r\n\r\n  const onSubmit = async () => {\r\n    dispatch(\r\n      moveCard(cardId, { fromId: thisList._id, toId: listObject._id, toIndex: position })\r\n    );\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.moveCard}>\r\n      <h3 className={classes.moveCardTitle}>Move this card</h3>\r\n      <div>\r\n        <FormControl className={classes.moveCardSelect}>\r\n          <InputLabel shrink>List</InputLabel>\r\n          <Select\r\n            value={listTitle}\r\n            required\r\n            onChange={(e) => {\r\n              setListTitle(e.target.value);\r\n              setListObject(listObjects.find((list) => list.title === e.target.value));\r\n            }}\r\n            displayEmpty\r\n          >\r\n            {listObjects.map((list) => (\r\n              <MenuItem key={list._id} value={list.title}>\r\n                {list.title}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n        <FormControl className={classes.moveCardSelect}>\r\n          <InputLabel shrink>Position</InputLabel>\r\n          <Select\r\n            value={position}\r\n            required\r\n            onChange={(e) => setPosition(e.target.value)}\r\n            displayEmpty\r\n          >\r\n            {positions.map((position, index) => (\r\n              <MenuItem key={position} value={position}>\r\n                {index + 1}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </div>\r\n      <Button\r\n        className={classes.button}\r\n        variant='contained'\r\n        color='primary'\r\n        onClick={onSubmit}\r\n      >\r\n        Move Card\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nMoveCard.propTypes = {\r\n  cardId: PropTypes.string.isRequired,\r\n  setOpen: PropTypes.func.isRequired,\r\n  thisList: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default MoveCard;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { deleteCard } from '../../Redux/actions/board';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst DeleteCard = ({ cardId, setOpen, list }) => {\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpenDialog(false);\r\n  };\r\n\r\n  const onDeleteCard = async () => {\r\n    dispatch(deleteCard(list._id, cardId));\r\n    setOpenDialog(false);\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button variant='contained' color='secondary' onClick={handleClickOpen}>\r\n        Delete Card\r\n      </Button>\r\n      <Dialog open={openDialog} onClose={handleClose}>\r\n        <DialogTitle>{'Delete card?'}</DialogTitle>\r\n        <DialogActions>\r\n          <Button onClick={onDeleteCard} variant='contained' color='primary' autoFocus>\r\n            Delete\r\n          </Button>\r\n          <Button onClick={handleClose}>\r\n            <CloseIcon />\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nDeleteCard.propTypes = {\r\n  cardId: PropTypes.string.isRequired,\r\n  setOpen: PropTypes.func.isRequired,\r\n  list: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default DeleteCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { editCard } from '../../Redux/actions/board';\r\nimport { Modal, TextField, Button } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MoveCard from './MoveCard';\r\nimport DeleteCard from './DeleteCard';\r\n\r\n\r\nimport useStyles from '../../Helpers/modalStyles';\r\n\r\nconst CardModal = ({ cardId, open, setOpen, card, list }) => {\r\n  const classes = useStyles();\r\n  const [title, setTitle] = useState(card.title);\r\n  const [description, setDescription] = useState(card.description);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setTitle(card.title);\r\n    setDescription(card.description);\r\n  }, [card]);\r\n\r\n  const onTitleDescriptionSubmit = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(editCard(cardId, { title, description }));\r\n  };\r\n\r\n \r\n\r\n  return (\r\n    <Modal open={open} onClose={() => setOpen(false)}>\r\n      <div className={`${classes.paper} ${classes.cardModal}`}>\r\n        <form onSubmit={(e) => onTitleDescriptionSubmit(e)}>\r\n          <div className={classes.modalTop}>\r\n            <TextField\r\n              variant='outlined'\r\n              margin='normal'\r\n              required\r\n              fullWidth\r\n              multiline\r\n              label='Card title'\r\n              value={title}\r\n              onChange={(e) => setTitle(e.target.value)}\r\n              onKeyPress={(e) => e.key === 'Enter' && onTitleDescriptionSubmit(e)}\r\n              className={classes.cardTitle}\r\n            />\r\n            <Button onClick={() => setOpen(false)}>\r\n              <CloseIcon />\r\n            </Button>\r\n          </div>\r\n          <TextField\r\n            variant='outlined'\r\n            margin='normal'\r\n            fullWidth\r\n            multiline\r\n            label='Card description'\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n          />\r\n          <Button\r\n            type='submit'\r\n            variant='contained'\r\n            color='primary'\r\n            disabled={\r\n              title === card.title &&\r\n              (description === card.description ||\r\n                (description === '' && !card.description))\r\n            }\r\n            className={classes.button}\r\n          >\r\n            Save All Changes\r\n          </Button>\r\n        </form>\r\n        <div className={classes.modalSection}>\r\n         \r\n          <div>\r\n           \r\n          </div>\r\n        </div>\r\n       \r\n        <div className={classes.modalSection}>\r\n          <MoveCard cardId={cardId} setOpen={setOpen} thisList={list} />\r\n          <div className={classes.modalBottomRight}>\r\n          \r\n            <DeleteCard cardId={cardId} setOpen={setOpen} list={list} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nCardModal.propTypes = {\r\n  cardId: PropTypes.string.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  setOpen: PropTypes.func.isRequired,\r\n  card: PropTypes.object.isRequired,\r\n  list: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CardModal;\r\n","import React, { Fragment, useRef, useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport { getCard, editCard } from '../../Redux/actions/board';\r\nimport getInitials from '../../Helpers/getInitials';\r\n\r\nimport CardMUI from '@material-ui/core/Card';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\nimport { TextField, CardContent, Button, Avatar, Tooltip } from '@material-ui/core';\r\nimport CardModal from './CardModal';\r\n\r\nconst Card = ({ cardId, list, index }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  const [mouseOver, setMouseOver] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [height, setHeight] = useState(0);\r\n  const [completeItems, setCompleteItems] = useState(0);\r\n  const cardRef = useRef(null);\r\n  const card = useSelector((state) =>\r\n    state.board.board.cardObjects.find((object) => object._id === cardId)\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getCard(cardId));\r\n  }, [cardId, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (card) {\r\n      setTitle(card.title);\r\n      card.checklist &&\r\n        setCompleteItems(\r\n          card.checklist.reduce(\r\n            (completed, item) => (completed += item.complete ? 1 : 0),\r\n            0\r\n          )\r\n        );\r\n    }\r\n  }, [card]);\r\n\r\n  useEffect(() => {\r\n    cardRef && cardRef.current && setHeight(cardRef.current.clientHeight);\r\n  }, [list, card, cardRef]);\r\n\r\n  const onSubmitEdit = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(editCard(cardId, { title }));\r\n    setEditing(false);\r\n    setMouseOver(false);\r\n  };\r\n\r\n  return !card || (card && card.archived) ? (\r\n    ''\r\n  ) : (\r\n    <Fragment>\r\n      <CardModal\r\n        cardId={cardId}\r\n        open={openModal}\r\n        setOpen={setOpenModal}\r\n        card={card}\r\n        list={list}\r\n      />\r\n      {!editing ? (\r\n        <Draggable draggableId={cardId} index={index}>\r\n          {(provided) => (\r\n            <CardMUI\r\n              className={`card ${mouseOver && !editing ? 'mouse-over' : ''}`}\r\n              onMouseOver={() => setMouseOver(true)}\r\n              onMouseLeave={() => setMouseOver(false)}\r\n              ref={provided.innerRef}\r\n              {...provided.draggableProps}\r\n              {...provided.dragHandleProps}\r\n            >\r\n              {mouseOver && !editing && (\r\n                <Button\r\n                  style={{\r\n                    position: 'absolute',\r\n                    bottom: height - 40,\r\n                    left: '180px',\r\n                    zIndex: 1,\r\n                  }}\r\n                  onClick={() => setEditing(true)}\r\n                >\r\n                  <EditIcon fontSize='small' />\r\n                </Button>\r\n              )}\r\n              <CardContent\r\n                onClick={() => {\r\n                  setOpenModal(true);\r\n                  setMouseOver(false);\r\n                }}\r\n                ref={cardRef}\r\n              >\r\n                {card.label && card.label !== 'none' && (\r\n                  <div className='card-label' style={{ backgroundColor: card.label }} />\r\n                )}\r\n                <p>{card.title}</p>\r\n                <div className='card-bottom'>\r\n                  <div className='card-bottom-left'>\r\n                    {card.description && (\r\n                      <SubjectIcon className='description-indicator' fontSize='small' />\r\n                    )}\r\n                    {card.checklist && card.checklist.length > 0 && (\r\n                      <div\r\n                        className={`checklist-indicator ${\r\n                          completeItems === card.checklist.length\r\n                            ? 'completed-checklist-indicator'\r\n                            : ''\r\n                        }`}\r\n                      >\r\n                        <AssignmentTurnedInIcon\r\n                          fontSize='small'\r\n                          className='checklist-indicator-icon'\r\n                        />\r\n                        {completeItems}/{card.checklist.length}\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  <div className='card-member-avatars'>\r\n                    {card.members.map((member) => {\r\n                      return (\r\n                        <Tooltip title={member.name} key={member.user}>\r\n                          <Avatar className='avatar'>{getInitials(member.name)}</Avatar>\r\n                        </Tooltip>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              </CardContent>\r\n            </CardMUI>\r\n          )}\r\n        </Draggable>\r\n      ) : (\r\n        <form className='create-card-form' onSubmit={(e) => onSubmitEdit(e)}>\r\n          <CardMUI>\r\n            <CardContent className='card-edit-content'>\r\n              <TextField\r\n                margin='normal'\r\n                fullWidth\r\n                multiline\r\n                required\r\n                label=\"Edit this card's title\"\r\n                autoFocus\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                onKeyPress={(e) => e.key === 'Enter' && onSubmitEdit(e)}\r\n              />\r\n            </CardContent>\r\n          </CardMUI>\r\n          <div className='card-actions'>\r\n            <Button type='submit' variant='contained' color='primary'>\r\n              Save\r\n            </Button>\r\n            <Button\r\n              onClick={() => {\r\n                setEditing(false);\r\n                setMouseOver(false);\r\n                setTitle(card.title);\r\n              }}\r\n            >\r\n              <CloseIcon />\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCard.propTypes = {\r\n  cardId: PropTypes.string.isRequired,\r\n  list: PropTypes.object.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Card;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { addCard } from '../../Redux/actions/board';\r\nimport { Card, CardContent, TextField, Button } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst CreateCardForm = ({ listId, setAdding }) => {\r\n  const [title, setTitle] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const formRef = useRef(null);\r\n  useEffect(() => {\r\n    formRef && formRef.current && formRef.current.scrollIntoView();\r\n  }, [title]);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(addCard({ title, listId }));\r\n    setTitle('');\r\n  };\r\n\r\n  return (\r\n    <form ref={formRef} className='create-card-form' onSubmit={(e) => onSubmit(e)}>\r\n      <Card>\r\n        <CardContent className='card-edit-content'>\r\n          <TextField\r\n            margin='normal'\r\n            fullWidth\r\n            multiline\r\n            required\r\n            label='Enter a title for this card'\r\n            autoFocus\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            onKeyPress={(e) => e.key === 'Enter' && onSubmit(e)}\r\n          />\r\n        </CardContent>\r\n      </Card>\r\n      <div className='card-actions'>\r\n        <Button type='submit' variant='contained' color='primary'>\r\n          Add a Task\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            setAdding(false);\r\n            setTitle('');\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nCreateCardForm.propTypes = {\r\n  listId: PropTypes.string.isRequired,\r\n  setAdding: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CreateCardForm;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { getList } from '../../Redux/actions/board';\r\nimport ListTitle from './ListTitle';\r\n\r\nimport Card from '../TaskCard/Card';\r\nimport CreateCardForm from './CreateCardForm';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst List = ({ listId, index }) => {\r\n  const [addingCard, setAddingCard] = useState(false);\r\n  const list = useSelector((state) =>\r\n    state.board.board.listObjects.find((object) => object._id === listId)\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getList(listId));\r\n  }, [dispatch, listId]);\r\n\r\n  const createCardFormRef = useRef(null);\r\n  useEffect(() => {\r\n    addingCard && createCardFormRef.current.scrollIntoView();\r\n  }, [addingCard]);\r\n\r\n  return !list || (list && list.archived) ? (\r\n    ''\r\n  ) : (\r\n    <Draggable draggableId={listId} index={index}>\r\n      {(provided) => (\r\n        <div\r\n          className='list-wrapper'\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <div className='list-top'>\r\n            <ListTitle list={list} />\r\n          \r\n          </div>\r\n          <Droppable droppableId={listId} type='card'>\r\n            {(provided) => (\r\n              <div\r\n                className={`list ${addingCard ? 'adding-card' : 'not-adding-card'}`}\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                <div className='cards'>\r\n                  {list.cards.map((cardId, index) => (\r\n                    <Card key={cardId} cardId={cardId} list={list} index={index} />\r\n                  ))}\r\n                </div>\r\n                {provided.placeholder}\r\n                {addingCard && (\r\n                  <div ref={createCardFormRef}>\r\n                    <CreateCardForm listId={listId} setAdding={setAddingCard} />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n          {!addingCard && (\r\n            <div className='create-card-button'>\r\n              <Button variant='contained' onClick={() => setAddingCard(true)}>\r\n                + Add a card\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nList.propTypes = {\r\n  listId: PropTypes.string.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default List;\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addList } from '../../Redux/actions/board';\r\nimport { TextField, Button } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nconst CreateList = () => {\r\n  const [adding, setAdding] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const formRef = useRef(null);\r\n  useEffect(() => {\r\n    formRef && formRef.current && formRef.current.scrollIntoView();\r\n  }, [title]);\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(addList({ title }));\r\n    setTitle('');\r\n  };\r\n\r\n  return !adding ? (\r\n    <div className='create-list-button'>\r\n      <Button variant='contained' onClick={() => setAdding(true)}>\r\n        + Add a list\r\n      </Button>\r\n    </div>\r\n  ) : (\r\n    <div ref={formRef} className='create-list-form'>\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <TextField\r\n          variant='outlined'\r\n          fullWidth\r\n          margin='normal'\r\n          required\r\n          label='Enter list title'\r\n          autoFocus\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <div>\r\n          <Button type='submit' variant='contained' color='primary'>\r\n            Add List\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              setAdding(false);\r\n              setTitle('');\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreateList;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { getBoard, moveCard } from '../Redux/actions/board';\r\nimport { CircularProgress, Box } from '@material-ui/core';\r\nimport BoardTitle from '../components/TrelloBoard/BoardTitle';\r\n\r\nimport List from '../components/StatusList/List';\r\nimport CreateList from '../components/TrelloBoard/CreateList';\r\n\r\nimport Navbar from '../components/Common/Navbar';\r\n\r\nconst Board = ({ match }) => {\r\n  const board = useSelector((state) => state.board.board);\r\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getBoard(match.params.id));\r\n  }, [dispatch, match.params.id]);\r\n\r\n  if (!isAuthenticated) {\r\n    return <Redirect to='/' />;\r\n  }\r\n\r\n  const onDragEnd = (result) => {\r\n    const { source, destination, draggableId, type } = result;\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    if (type === 'card') {\r\n      dispatch(\r\n        moveCard(draggableId, {\r\n          fromId: source.droppableId,\r\n          toId: destination.droppableId,\r\n          toIndex: destination.index,\r\n        })\r\n      );\r\n    } \r\n  };\r\n\r\n  return !board ? (\r\n    <Fragment>\r\n      <Navbar />\r\n      \r\n      <Box className='board-loading'>\r\n        <CircularProgress />\r\n      </Box>\r\n    </Fragment>\r\n  ) : (\r\n    <div className='board-and-navbar'>\r\n      <Navbar />\r\n      <section className='board'>\r\n        <div className='board-top'>\r\n          <div className='board-top-left'>\r\n            <BoardTitle board={board} />\r\n          \r\n          </div>\r\n         \r\n        </div>\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n          <Droppable droppableId='all-lists' direction='horizontal' type='list'>\r\n            {(provided) => (\r\n              <div className='lists' ref={provided.innerRef} {...provided.droppableProps}>\r\n                {board.lists.map((listId, index) => (\r\n                  <List key={listId} listId={listId} index={index} />\r\n                ))}\r\n                {provided.placeholder}\r\n              \r\n                <CreateList />\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </section>\r\n      <h4>NOTE :- ADD ONLY TODO,PROGRESS,COMPLETED TABS ONLY AND IT'S CASE SENSITIVE ,OTHER THAN THESE 3 ARE NOT ACCEPTED</h4>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AlertMUI from '@material-ui/lab/Alert';\r\n\r\nconst Alert = () => {\r\n  const alerts = useSelector((state) => state.alert);\r\n\r\n  return (\r\n    alerts !== null &&\r\n    alerts.length > 0 &&\r\n    alerts.map((alert) => (\r\n      <AlertMUI severity={alert.alertType} key={alert.id}>\r\n        {alert.msg}\r\n      </AlertMUI>\r\n    ))\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { getProfile, updateProfile } from \"../Redux/actions/profile\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 800,\r\n    margin: \"auto\",\r\n  },\r\n  title: {\r\n    marginTop: theme.spacing(2),\r\n    marginLeft: theme.spacing(1),\r\n  },\r\n  flex: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  fieldName: {\r\n    width: 100,\r\n  },\r\n  textField: {\r\n    width: 550,\r\n  },\r\n  button: {\r\n    width: 100,\r\n    margin: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst UpdateProfile = ({\r\n  user,\r\n  authLoading,\r\n  profile,\r\n  profileLoading,\r\n  getProfile,\r\n  updateProfile,\r\n  history,\r\n}) => {\r\n  const classes = useStyles();\r\n  const initialState = {\r\n    name: \"\",\r\n    imgURL: \"\",\r\n   \r\n  };\r\n  const [formData, setFormData] = useState(initialState);\r\n  const  {name,imgURL} = formData;\r\n\r\n  const handleChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    updateProfile(formData, user._id, history);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user) getProfile(user._id);\r\n    if (!profileLoading && profile) {\r\n      const profileData = { ...initialState };\r\n      for (const key in profile) {\r\n        if (key in profileData) profileData[key] = profile[key];\r\n      }\r\n      if (Array.isArray(profileData.skills))\r\n        profileData.skills = profileData.skills.join(\",\");\r\n      setFormData(profileData);\r\n    }\r\n  }, [authLoading, profileLoading]);\r\n\r\n  return (\r\n    !profileLoading && (\r\n      <div className={classes.root}>\r\n        <Typography className={classes.title} variant=\"h6\">\r\n          Edit Profile\r\n        </Typography>\r\n        <form onSubmit={handleSubmit}>\r\n          <List>\r\n            <ListItem className={classes.flex}>\r\n              <ListItemText primary=\"Name\" className={classes.fieldName} />\r\n              <TextField\r\n                className={classes.textField}\r\n                variant=\"outlined\"\r\n                placeholder=\"name\"\r\n                name=\"headline\"\r\n                value={name}\r\n                onChange={handleChange}\r\n              />\r\n            </ListItem>\r\n\r\n            <ListItem className={classes.flex}>\r\n              <ListItemText primary=\"imgURL\" className={classes.fieldName} />\r\n              <TextField\r\n                className={classes.textField}\r\n                variant=\"outlined\"\r\n                placeholder=\"Paste Valid Image URL\"\r\n                name=\"location\"\r\n                value={imgURL}\r\n                onChange={handleChange}\r\n              />\r\n            </ListItem>\r\n\r\n           \r\n\r\n           \r\n          </List>\r\n\r\n          <Button\r\n            className={classes.button}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n          >\r\n            Save\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.auth.user,\r\n  authLoading: state.auth.loading,\r\n  profile: state.profile.profile,\r\n  profileLoading: state.profile.loading,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProfile, updateProfile })(\r\n  UpdateProfile\r\n);\r\n","import axios from \"axios\";\r\nimport { setAlert } from \"./alert\";\r\nimport {\r\n  GET_PROFILE,\r\n  UPDATE_PROFILE,\r\n  CLEAR_PROFILE,\r\n  UPDATE_PROFILE_ERROR,\r\n  PROFILE_ERROR,\r\n} from \"./types.js\";\r\n\r\nexport const getProfile = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/profile/${userId}`);\r\n\r\n    dispatch({ type: GET_PROFILE, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({ type: PROFILE_ERROR });\r\n  }\r\n};\r\n\r\nexport const updateProfile = (profileData, userId, history) => async (\r\n  dispatch\r\n) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify(profileData);\r\n\r\n  try {\r\n    const res = await axios.put(`/api/profile/${userId}`, body, config);\r\n\r\n    dispatch({ type: UPDATE_PROFILE, payload: res.data.profile });\r\n\r\n    dispatch(setAlert(\"success\", res.data.msg));\r\n\r\n    history.push(`/profile/${userId}`);\r\n  } catch (err) {\r\n    const errors = err.response.data.error;\r\n\r\n    if (errors) {\r\n      errors.forEach((error) => dispatch(setAlert(\"warning\", error)));\r\n    }\r\n\r\n    dispatch({ type: UPDATE_PROFILE_ERROR });\r\n  }\r\n};\r\n\r\nexport const clearProfile = () => (dispatch) => {\r\n  dispatch({ type: CLEAR_PROFILE });\r\n};","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  REGISTER_SUCCESS,\r\n  REGISTER_FAIL,\r\n  USER_LOADED,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  loading: true,\r\n  user: null,\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case USER_LOADED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n        user: payload,\r\n      };\r\n    case REGISTER_SUCCESS:\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem('token', payload.token);\r\n      return {\r\n        ...state,\r\n        ...payload,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case REGISTER_FAIL:\r\n    case AUTH_ERROR:\r\n    case LOGIN_FAIL:\r\n    case LOGOUT:\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CLEAR_BOARD,\r\n  GET_BOARDS,\r\n  GET_BOARD,\r\n  ADD_BOARD,\r\n  BOARD_ERROR,\r\n\r\n  GET_LIST,\r\n  ADD_LIST,\r\n \r\n  GET_CARD,\r\n  ADD_CARD,\r\n  EDIT_CARD,\r\n  MOVE_CARD,\r\n\r\n  DELETE_CARD,\r\n  \r\n\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  boards: [],\r\n  board: null,\r\n  dashboardLoading: true,\r\n  \r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case CLEAR_BOARD:\r\n      return {\r\n        ...state,\r\n        board: null,\r\n      };\r\n    case GET_BOARDS:\r\n      return {\r\n        ...state,\r\n        boards: payload,\r\n        dashboardLoading: false,\r\n      };\r\n    \r\n    case GET_BOARD:\r\n      return {\r\n        ...state,\r\n        board: { ...payload, ...state.board },\r\n      };\r\n    case ADD_BOARD:\r\n      return {\r\n        ...state,\r\n        boards: [payload, ...state.boards],\r\n      };\r\n    case BOARD_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n      };\r\n    case GET_LIST:\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          listObjects: [...state.board.listObjects, payload],\r\n        },\r\n      };\r\n    case ADD_LIST:\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: [...state.board.lists, payload._id],\r\n        },\r\n      };\r\n    \r\n    case GET_CARD:\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          cardObjects: [...state.board.cardObjects, payload],\r\n        },\r\n      };\r\n    case ADD_CARD:\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          listObjects: state.board.listObjects.map((list) =>\r\n            list._id === payload.listId\r\n              ? { ...list, cards: [...list.cards, payload.cardId] }\r\n              : list\r\n          ),\r\n        },\r\n      };\r\n\r\n    case EDIT_CARD:\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          cardObjects: state.board.cardObjects.map((card) =>\r\n            card._id === payload._id ? payload : card\r\n          ),\r\n        },\r\n      };\r\n    case MOVE_CARD:\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          listObjects: state.board.listObjects.map((list) =>\r\n            list._id === payload.from._id\r\n              ? payload.from\r\n              : list._id === payload.to._id\r\n              ? payload.to\r\n              : list\r\n          ),\r\n          cardObjects: state.board.cardObjects.filter(\r\n            (card) => card._id !== payload.cardId || payload.to._id === payload.from._id\r\n          ),\r\n        },\r\n      };\r\n    case DELETE_CARD:\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          cardObjects: state.board.cardObjects.filter((card) => card._id !== payload),\r\n          listObjects: state.board.listObjects.map((list) =>\r\n            list.cards.includes(payload)\r\n              ? { ...list, cards: list.cards.filter((card) => card !== payload) }\r\n              : list\r\n          ),\r\n        },\r\n      };\r\n   \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n    GET_PROFILE,\r\n    UPDATE_PROFILE,\r\n    CLEAR_PROFILE,\r\n    UPDATE_PROFILE_ERROR,\r\n    PROFILE_ERROR,\r\n  } from \"../actions/types\";\r\n  \r\n  const initialState = {\r\n    profile: null,\r\n    loading: true,\r\n  };\r\n  \r\n  export default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n      case GET_PROFILE:\r\n      case UPDATE_PROFILE:\r\n        return {\r\n          ...state,\r\n          profile: payload,\r\n          loading: false,\r\n        };\r\n  \r\n      case CLEAR_PROFILE:\r\n        return {\r\n          ...state,\r\n          profile: null,\r\n          loading: true,\r\n        };\r\n  \r\n      case UPDATE_PROFILE_ERROR:\r\n        return {\r\n          ...state,\r\n          loading: false,\r\n        };\r\n  \r\n      case PROFILE_ERROR:\r\n        return {\r\n          ...state,\r\n          profile: null,\r\n          loading: false,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import { combineReducers } from 'redux';\r\nimport alert from './alert';\r\nimport auth from './auth';\r\nimport board from './board';\r\nimport profile from \"./profile\"\r\n\r\nexport default combineReducers({ alert, auth, board,profile });\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst initialState = {};\r\n\r\nconst middleWare = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleWare))\r\n);\r\n\r\nexport default store;\r\n","import React, { Fragment, useEffect } from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Landing from './pages/Landing';\r\nimport Register from './pages/Register';\r\nimport Login from './pages/Login';\r\nimport Dashboard from './pages/Dashboard';\r\nimport Board from './pages/Board';\r\nimport Alert from './components/Common/Alert';\r\nimport UpdateProfile from \"./pages/UpdateProfile\"\r\n\r\n// Redux\r\nimport { Provider } from 'react-redux';\r\nimport store from './Redux/store';\r\nimport { loadUser } from './Redux/actions/auth';\r\nimport setAuthToken from './Helpers/setAuthToken.js';\r\n\r\nimport './App.css';\r\n\r\nif (localStorage.token) {\r\n  setAuthToken(localStorage.token);\r\n}\r\n\r\nconst App = () => {\r\n  useEffect(() => {\r\n    store.dispatch(loadUser());\r\n  }, []);\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <Fragment>\r\n          <Alert />\r\n          <Switch>\r\n            <Route exact path='/' component={Landing} />\r\n            <Route exact path='/register' component={Register} />\r\n            <Route exact path='/login' component={Login} />\r\n            <Route exact path='/dashboard' component={Dashboard} />\r\n            <Route exact path='/board/:id' component={Board} />\r\n            <Route exact path=\"/profile/edit\" component={UpdateProfile} />\r\n          </Switch>\r\n        </Fragment>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}